/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>

#define L_BASE 0
#define L_DVORAK 1
#define L_LOWER 2
#define L_RAISE 3
#define L_ADJUST 4

#define _______ &trans

&lt {
  tapping-term-ms = <150>;
  quick-tap-ms = <200>;
};

&caps_word {
  continue-list = <UNDERSCORE BACKSPACE>;
};

/ {
  keymap {
    compatible = "zmk,keymap";
    default_layer {
      bindings = <
&kp ESC           &kp Q    &kp W    &kp E    &kp R    &kp T                                     &kp Y    &kp U    &kp I     &kp O    &kp P    &kp BSLH
&kp LCTRL         &kp A    &kp S    &kp D    &kp F    &kp G                                     &kp H    &kp J    &kp K     &kp L    &kp SEMI &kp APOS
&mt LSHIFT LPAR   &kp Z    &kp X    &kp C    &kp V    &kp B                                     &kp N    &kp M    &kp COMMA &kp DOT  &kp FSLH &mt RSHIFT RPAR
                                &kp LGUI &lt L_LOWER TAB &kp SPC         &kp BSPC &lt L_RAISE ENTER &kp RALT
      >;
    };
    dvorak_layer {
      bindings = <

_______ &kp APOS    &kp COMMA &kp DOT    &kp P    &kp Y                                     &kp F    &kp G    &kp C    &kp R    &kp L _______
_______ &kp A       &kp O     &kp E      &kp U    &kp I                                     &kp D    &kp H    &kp T    &kp N    &kp S &kp FSLH
_______ &kp SEMI    &kp Q     &kp J      &kp K    &kp X                                     &kp B    &kp M    &kp W    &kp V    &kp Z _______
                                _______ _______ _______         _______ _______ _______
      >;
    };
    lower_layer {

      bindings = <
&kp GRAVE &kp EXCL &kp AT   &kp HASH &kp DLLR  &kp PRCNT                                     &kp STAR  &kp N7    &kp N8    &kp N9    &kp KP_PLUS   _______
_______ &kp CARET &kp AMPS &kp UNDER &kp LBKT &kp RBKT                                     &kp SLASH  &kp N4    &kp N5    &kp N6    &kp KP_MINUS  _______
_______ &kp SEMI &kp LT   &kp GT   &kp LBRC &kp RBRC                                     &kp N0    &kp N1    &kp N2    &kp N3    &kp KP_EQUAL  _______
                                _______ _______ _______                  _______   &mo L_ADJUST _______
      >;
    };

    raise_layer {
      bindings = <
_______ _______ _______ _______ _______ _______                                  _______ _______ _______ _______ _______   &kp PG_UP
_______ _______ _______ _______ _______ _______                                 &kp LEFT &kp DOWN &kp UP &kp RIGHT &kp HOME &kp END
_______ _______ _______ _______ _______ _______                                  _______ _______ _______ _______ _______   &kp PG_DN
                                _______   &mo L_ADJUST _______           _______ _______ _______
      >;
    };
    adjust_layer {
      bindings = <
&reset           &to L_DVORAK     &to L_BASE       &ext_power EP_TOG  &out OUT_TOG    &bt BT_NXT                                 &reset  &none        &none      &none        &kp K_VOL_UP   &kp KP_NUM
&rgb_ug RGB_TOG  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI    &rgb_ug RGB_SPI &bt BT_CLR                                 &none   &none        &none      &none        &kp K_MUTE     &caps_word
&rgb_ug RGB_EFF  &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD    &rgb_ug RGB_SPD _______                                    &none   &kp K_PREV   &kp K_PP   &kp K_NEXT   &kp K_VOL_DN   &kp SLCK
                                                  &kp LGUI _______  &kp SPC                                           &kp ENTER _______ &kp RALT
      >;
    };
  };
};
